
kernel.elf：     文件格式 elf32-i386
kernel.elf
体系结构：i386， 标志 0x00000112：
EXEC_P, HAS_SYMS, D_PAGED
起始地址 0x00100010

程序头：
    LOAD off    0x00001000 vaddr 0x00100000 paddr 0x00100000 align 2**12
         filesz 0x00004000 memsz 0x00004000 flags r--
    LOAD off    0x00005000 vaddr 0xc0104000 paddr 0x00104000 align 2**12
         filesz 0x00091000 memsz 0x00091000 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

节：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init.text    00001000  00100000  00100000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .init.data    00003000  00101000  00101000  00002000  2**12
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00004000  c0104000  00104000  00005000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text.__x86.get_pc_thunk.ax 00000004  c0108000  00108000  00009000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.__x86.get_pc_thunk.bx 00000004  c0108004  00108004  00009004  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data         00000ff8  c0108008  00108008  00009008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .got.plt      0000000c  c0109000  00109000  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .rodata       00000ff4  c010900c  0010900c  0000a00c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .bss          00081ca0  c010a000  0010a000  0000b000  2**5
                  ALLOC
  9 .stab         00006360  c018bca0  0018bca0  0008cca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .stabstr      00003000  c0192000  00192000  00093000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
SYMBOL TABLE:
00100000 l    d  .init.text	00000000 .init.text
00101000 l    d  .init.data	00000000 .init.data
c0104000 l    d  .text	00000000 .text
c0108000 l    d  .text.__x86.get_pc_thunk.ax	00000000 .text.__x86.get_pc_thunk.ax
c0108004 l    d  .text.__x86.get_pc_thunk.bx	00000000 .text.__x86.get_pc_thunk.bx
c0108008 l    d  .data	00000000 .data
c0109000 l    d  .got.plt	00000000 .got.plt
c010900c l    d  .rodata	00000000 .rodata
c010a000 l    d  .bss	00000000 .bss
c018bca0 l    d  .stab	00000000 .stab
c0192000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 boot/boot.s
00800000 l       *ABS*	00000000 DESC_G_4K
00400000 l       *ABS*	00000000 DESC_D_32
00000000 l       *ABS*	00000000 DESC_L
00000000 l       *ABS*	00000000 DESC_AVL
000f0000 l       *ABS*	00000000 DESC_LIMIT_CODE2
000f0000 l       *ABS*	00000000 DESC_LIMIT_DATA2
00000000 l       *ABS*	00000000 DESC_LIMIT_VIDEO2
00008000 l       *ABS*	00000000 DESC_P
00000000 l       *ABS*	00000000 DESC_DPL_0
00002000 l       *ABS*	00000000 DESC_DPL_1
00004000 l       *ABS*	00000000 DESC_DPL_2
00006000 l       *ABS*	00000000 DESC_DPL_3
00001000 l       *ABS*	00000000 DESC_S_CODE
00001000 l       *ABS*	00000000 DESC_S_DATA
00000000 l       *ABS*	00000000 DESC_S_sys
00000800 l       *ABS*	00000000 DESC_TYPE_CODE
00000200 l       *ABS*	00000000 DESC_TYPE_DATA
00cf9800 l       *ABS*	00000000 DESC_CODE_HIGH4
00cf9200 l       *ABS*	00000000 DESC_DATA_HIGH4
00c0920b l       *ABS*	00000000 DESC_VIDEO_HIGH4
00000000 l       *ABS*	00000000 RPL0
00000001 l       *ABS*	00000000 RPL1
00000002 l       *ABS*	00000000 RPL2
00000003 l       *ABS*	00000000 RPL3
00000000 l       *ABS*	00000000 TI_GDT
00000004 l       *ABS*	00000000 TI_LDT
00000001 l       *ABS*	00000000 PG_P
00000000 l       *ABS*	00000000 PG_RW_R
00000002 l       *ABS*	00000000 PG_RW_W
00000000 l       *ABS*	00000000 PG_US_S
00000004 l       *ABS*	00000000 PG_US_U
00000000 l     O *ABS*	00000004 PT_NULL
0010000c l     O .init.text	00000004 temp_mboot_ptr
00100044 l       .init.text	00000000 set_page
00100049 l       .init.text	00000000 set_page.clear_mem
0010005a l       .init.text	00000000 set_page.create_pde
00100071 l       .init.text	00000000 set_page.create_pte
00101000 l     O .init.data	00000001 temp_dir_table
00102000 l     O .init.data	00000001 temp_page_table
00103000 l     O .init.data	00000001 init_stack
001033ff l       .init.data	00000000 INIT_STACK_TOP
c0104000 l     O .text	00000004 GDT_BASE
c0104008 l     O .text	00000004 CODE_DESC
c0104010 l     O .text	00000004 DATA_STACK_DESC
c0104018 l     O .text	00000004 VIDEO_DESC
00000020 l       *ABS*	00000000 GDT_SIZE
0000001f l     O *ABS*	00000008 GDT_LIMIT
00000008 l       *ABS*	00000000 SELECTOR_CODE
00000010 l       *ABS*	00000000 SELECTOR_DATA
00000018 l       *ABS*	00000000 SELECTOR_VIDEO
c0104110 l     O .text	00000004 total_mem_bytes
c0104114 l     O .text	00000002 gdt_ptr
c010411a l       .text	00000000 boot_start_after_set_paging
c0104140 l       .text	00000000 far_jmp_target
c010a000 l     O .bss	00000001 stack
c0189fff l       .bss	00000000 STACK_TOP
00000000 l    df *ABS*	00000000 kernel/init/interrupt_asm.s
00000010 l       *ABS*	00000000 KERN_DATA_SELECTOR
00000018 l       *ABS*	00000000 KERN_VGA_SELECTOR
c0104170 l       .text	00000000 pre_handle
00000000 l    df *ABS*	00000000 kernel/init/threads_asm.s
00000000 l    df *ABS*	00000000 vga_basic.c
c010800c l     O .data	00000001 tab_length
c0108010 l     O .data	00000004 video_memory
c018a000 l     O .bss	00000001 cursor_x
c018a001 l     O .bss	00000001 cursor_y
c010436e l     F .text	00000096 move_cursor
00000000 l    df *ABS*	00000000 port.c
00000000 l    df *ABS*	00000000 printk.c
c018a020 l     O .bss	00000064 staticArry.1036
c018a0a0 l     O .bss	00000064 staticArry.1066
00000000 l    df *ABS*	00000000 string.c
c0104dd3 l     F .text	000000a9 func
c018a120 l     O .bss	0000000b static_hexstr.978
c018a140 l     O .bss	00000020 m.1041
00000000 l    df *ABS*	00000000 _8259A.c
c0108014 l     O .data	00000002 m_control_port
c0108016 l     O .data	00000002 m_data_port
c0108018 l     O .data	00000002 o_control_port
c010801a l     O .data	00000002 o_data_port
00000000 l    df *ABS*	00000000 entry.c
00000000 l    df *ABS*	00000000 pmm.c
c018a1d0 l     O .bss	00000004 pmm_page_start
c018a1d4 l     O .bss	00000004 pmm_page_end
c018a1d8 l     O .bss	00000004 pmm_max_page_no
c018a1dc l     O .bss	00000004 singel_page_first_no
c01053eb l     F .text	0000001d pmm_page_no_to_addr
c0105408 l     F .text	0000001f addr_to_pmm_page_no
c0105427 l     F .text	00000024 c_to_uint32
c010544b l     F .text	0000004c get_partner_page_no
c0105497 l     F .text	00000346 append_block
c01057dd l     F .text	00000370 pop_block
c0105b4d l     F .text	0000017b find_and_pop_block
c0105cc8 l     F .text	000000bf get_max_pm_addr
c0105d87 l     F .text	00000293 pmm_page_init
c010601a l     F .text	0000004d alloc_helper
c0106277 l     F .text	00000091 free_helper
c01063bd l     F .text	00000031 counte_helper
c01054de l       .text	00000000 .L12
c010551a l       .text	00000000 .L14
c0105558 l       .text	00000000 .L15
c0105596 l       .text	00000000 .L16
c01055d4 l       .text	00000000 .L17
c0105612 l       .text	00000000 .L18
c0105650 l       .text	00000000 .L19
c010568e l       .text	00000000 .L20
c01056cc l       .text	00000000 .L21
c010570a l       .text	00000000 .L22
c0105741 l       .text	00000000 .L23
c0105778 l       .text	00000000 .L39
c0105808 l       .text	00000000 .L54
c010584b l       .text	00000000 .L56
c0105890 l       .text	00000000 .L57
c01058d5 l       .text	00000000 .L58
c010591a l       .text	00000000 .L59
c010595f l       .text	00000000 .L60
c01059a4 l       .text	00000000 .L61
c01059e9 l       .text	00000000 .L62
c0105a2e l       .text	00000000 .L63
c0105a73 l       .text	00000000 .L64
c0105ab4 l       .text	00000000 .L65
c0105aef l       .text	00000000 .L66
c0105b78 l       .text	00000000 .L105
c0105b8a l       .text	00000000 .L107
c0105b9d l       .text	00000000 .L108
c0105bb0 l       .text	00000000 .L109
c0105bc0 l       .text	00000000 .L110
c0105bd0 l       .text	00000000 .L111
c0105be0 l       .text	00000000 .L112
c0105bf0 l       .text	00000000 .L113
c0105c00 l       .text	00000000 .L114
c0105c10 l       .text	00000000 .L115
c0105c20 l       .text	00000000 .L116
c0105c30 l       .text	00000000 .L117
00000000 l    df *ABS*	00000000 interrupt.c
c0108020 l     O .data	00000001 default_inf
c0108022 l     O .data	00000002 kern_cs
c01067fe l     F .text	0000007e set_int_disc
c010687c l     F .text	0000006a timer_init
c01068e6 l     F .text	0000001f registe_interrupt
00000000 l    df *ABS*	00000000 threads.c
00000000 l    df *ABS*	00000000 vmm.c
00000000 l    df *ABS*	00000000 kernel/init/load_idt.s
00000000 l    df *ABS*	00000000 
c0109000 l     O .got.plt	00000000 _GLOBAL_OFFSET_TABLE_
c0106905 g     F .text	0000002b default_server_func
c0104311 g       .text	00000000 load_idt
c01050be g     F .text	00000046 strcpy
c0104b19 g     F .text	00000071 printbasic
c010527f g     F .text	000000d8 _8259A_init
c0104824 g     F .text	00000027 inb
c0105202 g     F .text	0000007d strrevers
c0105357 g     F .text	00000068 kern_entry
c0106067 g     F .text	0000011f pmm_alloc_pages
c010474b g     F .text	0000002d kputc
c01041df g       .text	00000000 isr4
c01042cf g       .text	00000000 isr27
c0104238 g       .text	00000000 isr13
c010513d g     F .text	000000c5 uintTostring
c0104778 g     F .text	00000046 kputs_color
c0104298 g       .text	00000000 isr22
c010424c g       .text	00000000 isr15
c01045b5 g     F .text	000000d9 vga_putc
c018b020 g     O .bss	00000400 int_server_func_list
c010420f g       .text	00000000 isr9
c0104fa2 g     F .text	0000002f memcpy
00100010 g       .init.text	00000000 boot_start
c01042a3 g       .text	00000000 isr23
c01042e5 g       .text	00000000 isr29
c018a160 g     O .bss	00000030 block_count_array
c0104874 g     F .text	000000a2 insert_str
c0106ef8 g     F .text	0000002a int_func_route
c01042fb g       .text	00000000 isr31
c0108000 g     F .text.__x86.get_pc_thunk.ax	00000000 .hidden __x86.get_pc_thunk.ax
c018a1cc g     O .bss	00000004 SINGLE_LINK
c010428d g       .text	00000000 isr21
c01042da g       .text	00000000 isr28
c01047e3 g     F .text	00000018 vga_init
c0104205 g       .text	00000000 isr8
c0106f22 g     F .text	00000075 threads_init
c01070b1 g     F .text	0000008b schedule
c010500b g     F .text	00000020 bzero
c0104326 g       .text	00000000 switch_to
c0104282 g       .text	00000000 isr20
c0104242 g       .text	00000000 isr14
c010484b g     F .text	00000029 inw
c01041e7 g       .text	00000000 isr5
c0104320 g       .text	00000000 get_esp
c0106982 g     F .text	00000576 idt_init
c018a1a0 g     O .bss	0000002c multi_link_struct
c0104306 g       .text	00000000 isr32
c0105104 g     F .text	00000039 strcat
c0106569 g     F .text	0000015a pmm_show_page_count
c0106f97 g     F .text	00000068 create_TCB
c010801c g     O .data	00000004 page_array
c0104404 g     F .text	00000046 move_cursor_by_XY
c01041c7 g       .text	00000000 isr1
c018b420 g     O .bss	00000006 lidt_target
c018b440 g     O .bss	00000800 idt_entries
c018bc40 g     O .bss	00000004 cur_tcb
c01042c4 g       .text	00000000 isr26
c0104224 g       .text	00000000 isr11
c0108004 g     F .text.__x86.get_pc_thunk.bx	00000000 .hidden __x86.get_pc_thunk.bx
c01044ba g     F .text	000000fb screen_uproll_once
c0195000 g       .stabstr	00000000 kern_end
c0104916 g     F .text	00000203 printk
c01047fb g     F .text	00000029 outb
c010422e g       .text	00000000 isr12
c010652f g     F .text	0000003a get_single_count
c01063ee g     F .text	00000141 get_block_count
c018bc60 g     O .bss	00000040 main_TCB
c0104fd1 g     F .text	0000003a memset
c0106308 g     F .text	000000b5 pmm_free_page
c01041bf g       .text	00000000 isr0
c0106fff g     F .text	000000b2 create_thread
c01042ae g       .text	00000000 isr24
c0104257 g       .text	00000000 isr16
c010502b g     F .text	00000062 strcmp
c0106186 g     F .text	000000f1 pmm_alloc_one_page
c0104e7c g     F .text	00000126 num2hexstr
c010468e g     F .text	000000bd kputc_color
c01041d7 g       .text	00000000 isr3
c01066c3 g     F .text	0000013b pmm_init
c01041ef g       .text	00000000 isr6
c01047be g     F .text	00000025 kputs
c0104323 g       .text	00000000 get_eflags
c01053bf g     F .text	0000002c func
c010713c g     F .text	00000076 remove_thread
c010426c g       .text	00000000 isr18
c0104b8a g     F .text	00000209 printk_color
c018b000 g     O .bss	00000004 MULTI_LINK
c010421a g       .text	00000000 isr10
c01071b2 g     F .text	0000006c exit
c0104262 g       .text	00000000 isr17
c01041cf g       .text	00000000 isr2
c0104277 g       .text	00000000 isr19
c01042f0 g       .text	00000000 isr30
c010508d g     F .text	00000031 strlen
c01041fa g       .text	00000000 isr7
c0108008 g       .data	00000000 mboot_ptr
c0100000 g       *ABS*	00000000 kern_start
c0104d93 g     F .text	00000040 printkDebug
c01042b9 g       .text	00000000 isr25
c0106930 g     F .text	00000052 timer_server_func
c010444a g     F .text	00000070 clear_screen


